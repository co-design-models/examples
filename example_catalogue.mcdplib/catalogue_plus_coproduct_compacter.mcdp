 mcdp {

    simple_cell = catalogue {
        provides voltage  [â„˜(V)]
        provides capacity [J]

        requires cost [$]
        requires mass [kg]

        # These two have some functions, but
        # non-dominating resources
        model1 | {1.5 V} | 1 MJ |  5 $ | 0.20 kg
        model2 | {1.5 V} | 1 MJ | 15 $ | 0.10 kg
        # This model gives 5V and needs an adapter
        model3 | {5.0 V} | 1 MJ |  5 $ | 0.30 kg
    }

    converters = catalogue {
        provides voltage    [powerset(V)]
        requires v_in       [powerset(V)]
        requires cost       [$]
        requires mass       [g]

        step_up1 | {5 V}        | {1.5 V} |  5 $ | 20 g
        step_up2 |       {12 V} | {1.5 V} | 10 $ | 20 g
        step_up3 | {5 V,  12 V} | {1.5 V} | 10 $ | 20 g
    }

    cell_plus_converter = mcdp {

        converter = instance converters
        cell = instance simple_cell

        provides voltage  using converter
        provides capacity using cell

        (v_in required by converter) <= (voltage provided by cell)

        requires cost = (cost required by cell + cost required by converter)
        requires mass = (mass required by cell + mass required by converter)
    }

    battery = instance choose(simple: simple_cell, conv: cell_plus_converter)
    requires cost, mass for battery
    provides voltage, capacity using battery
}
